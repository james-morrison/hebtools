Supply the path of a Datawell Waverider buoy data directory containing year 
subfolders, the 'raw_combined' module will then process the records from the 
raw files into a pandas DataFrame with columns 'sig_qual', 'heave', 'north' 
and 'west' the index is a DateTimeIndex.  

The 'raw_combined' module will iterate through the months folders in the 
supplied year directory, saving a pandas files in each directory.  

The code skips empty or erroneously long files and each record is rounded to 
the nearest then rounded to the nearest tenth of a second, so the sequence is 
slightly irregular. Caution should be taken in treating the timestamps as 
absolute values, they are a best approximation in the context of the time 
series.  

Peak and Troughs are detected for the heave values and with masking of data 
that has quality issues, wave heights and zero crossing periods are 
calculated.  

The 'problem_file_concat' module produces a csv file with the filenames of all
raw files that could not be processed, which can be run after 'raw_combined'.

The 'wave_concat' module can be run after 'raw_combined' to create a complete
dataframe of all wave heights timestamped and sorted temporally for each buoy,
the dataframe is then exported as an Excel workbook ( .xlsx file ).

The module requires a directory path that contains buoy directories and their 
names.

Requires: 
Numpy ( numpy.scipy.org )
Pandas ( pandas.pydata.org )
Matplotlib ( matplotlib.org )
openpyxl ( bitbucket.org/ericgazoni/openpyxl/src )

Almost all of the above requirements can be satisfied with a Python 
distribution like Anaconda CE from http://continuum.io/downloads.html
openpyxl can be installed afterwards by running 'easy_install openpyxl' from 
the Anaconda scripts directory.